name: Java CI Pipeline multiple java service per repo

on:
  push:
    branches: [main, dev, stage, prod]
  workflow_dispatch:

env:
  SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
  API_TOKEN_GITHUB: ${{ secrets.GH_PAT_DEST_REPO1 }}

jobs:
  java-ci:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: [microservice-one, microservice-two]

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Detect changes in ${{ matrix.service }}
        id: detect-changes
        run: |
          git fetch origin ${{ github.event.before }}
          CHANGED=$(git diff --name-only ${{ github.event.before }} ${{ github.sha }} | grep "^${{ matrix.service }}/" || true)
          echo "changed=$CHANGED" >> $GITHUB_OUTPUT

      - name: Skip if no change in ${{ matrix.service }}
        if: steps.detect-changes.outputs.changed == ''
        run: echo "No changes in ${{ matrix.service }}"

      - name: Build with Maven
        if: steps.detect-changes.outputs.changed != ''
        run: |
          docker run --rm \
            -v ${{ github.workspace }}:/app \
            -w /app/${{ matrix.service }} \
            maven:3.9.4-eclipse-temurin-17 \
            mvn clean package

      - name: Build Docker Image
        if: steps.detect-changes.outputs.changed != ''
        run: |
          IMAGE_NAME=${{ secrets.DOCKERHUB_USERNAME }}/${{ matrix.service }}:${{ github.ref_name }}-${{ github.run_id }}
          echo "IMAGE_NAME=$IMAGE_NAME" >> $GITHUB_ENV
          docker build -t $IMAGE_NAME ${{ matrix.service }}

      - name: Run Trivy vulnerability scanner
        if: steps.detect-changes.outputs.changed != ''
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: '${{ env.IMAGE_NAME }}'
          format: 'table'
          exit-code: '0'
          ignore-unfixed: true
          severity: 'CRITICAL,HIGH'
          output: 'trivy-report.txt'

      - name: Docker Push to Docker Hub
        if: steps.detect-changes.outputs.changed != ''
        run: |
          echo "${{ secrets.DOCKERHUB_TOKEN }}" | docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin
          docker push ${{ env.IMAGE_NAME }}

      - name: Save image name
        if: steps.detect-changes.outputs.changed != ''
        run: echo "${{ env.IMAGE_NAME }}" > image_name.txt

      - name: Upload image name artifact
        if: steps.detect-changes.outputs.changed != ''
        uses: actions/upload-artifact@v3
        with:
          name: image-name-${{ matrix.service }}
          path: image_name.txt

  deploy:
    needs: java-ci
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/dev' || github.ref == 'refs/heads/uat' || github.ref == 'refs/heads/prod'
    strategy:
      matrix:
        service: [microservice-one, microservice-two]

    steps:
      - name: Download image name artifact
        uses: actions/download-artifact@v3
        with:
          name: image-name-${{ matrix.service }}

      - name: Read image name
        id: read_image
        run: |
          IMAGE_NAME=$(cat image_name.txt)
          echo "IMAGE_NAME=$IMAGE_NAME" >> $GITHUB_ENV

      - name: Pull Docker Image
        run: |
          echo "${{ secrets.DOCKERHUB_TOKEN }}" | docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin
          docker pull ${{ env.IMAGE_NAME }}

      - name: Checkout manifest repo
        uses: actions/checkout@v4
        with:
          repository: ashishrlad/config_repo_samplejava
          token: ${{ secrets.GH_PAT_DEST_REPO1 }}
          path: manifest-repo

      - name: Update Deployment File
        run: |
          git config --global user.name "ashishrlad"
          git config --global user.email "ashishrlad@gmail.com"
          sed -i "s|image:.*|image: ${{ env.IMAGE_NAME }}|" manifest-repo/main/${{ matrix.service }}/guestbookdeployment.yml
          cat manifest-repo/main/${{ matrix.service }}/guestbookdeployment.yml

      - name: Push Updated Manifest
        run: |
          cd manifest-repo
          git remote set-url origin https://x-access-token:${{ secrets.GH_PAT_DEST_REPO1 }}@github.com/ashishrlad/config_repo_samplejava.git
          git add .
          git commit -m "Updated image for ${{ matrix.service }} on ${{ github.ref_name }}"
          git push origin main